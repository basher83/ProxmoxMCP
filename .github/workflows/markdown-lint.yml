name: 📝 Markdown Linting

on:
  push:
    branches: [main, develop]
    paths: ["**.md"]
  pull_request:
    branches: [main, develop]
    paths: ["**.md"]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  markdown-lint:
    name: 🔍 Lint Markdown Files
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: 📋 Install markdownlint-cli2
        run: npm install -g markdownlint-cli2

      - name: 🔍 Run Markdown Linting
        run: |
          echo "📝 Running Markdown Linting Analysis..."
          markdownlint-cli2 "**/*.md" --config .markdownlint.jsonc || true

      - name: 📊 Generate Lint Report
        run: |
          echo "📊 Generating detailed markdown lint report..."
          markdownlint-cli2 "**/*.md" --config .markdownlint.jsonc > markdown-lint-report.txt 2>&1 || true
          echo "✅ Report generated"

      - name: 📄 Upload Lint Report
        uses: actions/upload-artifact@v4
        with:
          name: markdown-lint-report
          path: markdown-lint-report.txt
          retention-days: 30

  markdown-autofix:
    name: 🔧 Auto-fix Markdown Issues
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: 📋 Install markdownlint-cli2
        run: npm install -g markdownlint-cli2

      - name: 🔧 Auto-fix Markdown Issues
        run: |
          echo "🔧 Running markdown auto-fix..."
          markdownlint-cli2 --fix "**/*.md" --config .markdownlint.jsonc || true

      - name: 📝 Check for Changes
        id: changes
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "📝 Markdown fixes were applied"
          else
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "✅ No markdown fixes needed"
          fi

      - name: 💾 Commit Auto-fixes
        if: steps.changes.outputs.changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action (Markdown Auto-fix)"
          git add .
          git commit -m "docs: auto-fix markdown formatting issues

          - Fix MD032 (lists surrounded by blank lines)
          - Fix MD022 (headers surrounded by blank lines)
          - Fix MD031 (fenced code blocks surrounded by blank lines)
          - Other auto-fixable markdown formatting issues

          Auto-generated by markdown-lint.yml workflow"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  markdown-summary:
    name: 📊 Markdown Quality Summary
    runs-on: ubuntu-latest
    needs: [markdown-lint]
    if: always()

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: 📋 Install markdownlint-cli2
        run: npm install -g markdownlint-cli2

      - name: 📊 Generate Quality Summary
        run: |
          echo "# 📝 Markdown Quality Report" > markdown-summary.md
          echo "" >> markdown-summary.md
          echo "## 📊 Analysis Results" >> markdown-summary.md
          echo "" >> markdown-summary.md

          # Count total markdown files
          TOTAL_FILES=$(find . -name "*.md" -not -path "./.venv/*" -not -path "./node_modules/*" | wc -l)
          echo "- **Total Markdown Files**: $TOTAL_FILES" >> markdown-summary.md

          # Run linting and capture results
          LINT_OUTPUT=$(markdownlint-cli2 "**/*.md" --config .markdownlint.jsonc 2>&1 || true)
          ERROR_COUNT=$(echo "$LINT_OUTPUT" | grep -c "MD[0-9]" || echo "0")

          echo "- **Total Issues Found**: $ERROR_COUNT" >> markdown-summary.md
          echo "" >> markdown-summary.md

          if [ "$ERROR_COUNT" -eq "0" ]; then
            echo "✅ **All markdown files pass quality checks!**" >> markdown-summary.md
          else
            echo "⚠️ **Issues found that need attention:**" >> markdown-summary.md
            echo "" >> markdown-summary.md
            echo "Run \`task markdown:fix\` locally to auto-fix many of these issues." >> markdown-summary.md
            echo "" >> markdown-summary.md
            echo "<details><summary>📋 View Detailed Issues</summary>" >> markdown-summary.md
            echo "" >> markdown-summary.md
            echo "\`\`\`" >> markdown-summary.md
            echo "$LINT_OUTPUT" | head -50 >> markdown-summary.md
            echo "\`\`\`" >> markdown-summary.md
            echo "" >> markdown-summary.md
            echo "</details>" >> markdown-summary.md
          fi

          cat markdown-summary.md

      - name: 📄 Upload Summary
        uses: actions/upload-artifact@v4
        with:
          name: markdown-quality-summary
          path: markdown-summary.md
          retention-days: 30
