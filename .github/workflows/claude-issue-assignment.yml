name: Claude Code Issue Assignment

on:
  workflow_dispatch:
  # issues:
    # types: [assigned]

jobs:
  claude-issue-handler:
    runs-on: ubuntu-latest
    if: contains(github.event.issue.assignees.*.login, 'claude-code-bot') ||
        contains(github.event.issue.labels.*.name, 'claude-code')
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      # Claude Code will create its own branch, so we don't need to create one manually

      - name: Add comment to issue
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `ðŸ¤– **Claude Code has been assigned to this issue!**

            I'll start working on this issue and create a pull request when ready.

            **What happens next:**
            1. I'll analyze the issue requirements
            2. Implement the necessary changes
            3. Run tests and quality checks
            4. Create a pull request for review

            You can track my progress by watching for commits on the new branch that will be created.`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Set up Python environment
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install uv
        run: pip install uv

      - name: Install dependencies
        run: |
          uv venv
          source .venv/bin/activate
          uv pip install -e ".[dev]"

      - name: Claude Code Implementation
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          timeout_minutes: "120"
          direct_prompt: |
            I've been assigned to work on GitHub Issue #${{ github.event.issue.number }}.

            **Issue Title:** ${{ github.event.issue.title }}

            **Issue Description:**
            ${{ github.event.issue.body }}

            **Instructions:**
            1. Analyze the issue requirements carefully
            2. Implement the necessary changes following the project's coding standards
            3. Ensure all changes are well-tested and documented
            4. Follow the patterns and conventions established in the codebase
            5. Run quality checks (pytest, black, mypy) to ensure code quality
            6. Commit changes with clear, descriptive commit messages
            7. When implementation is complete, create a pull request

            **Branch:** I'll create a new branch for this work

            Please implement the solution for this issue following the project's guidelines
            in CLAUDE.md and the development workflow.

            Remember to:
            - Follow the existing code patterns and architecture
            - Add appropriate tests for new functionality
            - Update documentation if needed
            - Ensure all quality checks pass
            - Create meaningful commit messages
          allowed_tools: "Bash,Read,Write,Edit,Glob,Grep"
          assignee_trigger: "basher83,claude-code-bot"

      - name: Create Pull Request
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            // Claude Code creates its own branch, we need to find it
            // Look for branches that start with claude/issue-{number}
            const issueNumber = ${{ github.event.issue.number }};
            const branchPrefix = `claude/issue-${issueNumber}`;

            // Get all branches and find the one Claude created
            const branches = await github.rest.repos.listBranches({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 100
            });

            const claudeBranch = branches.data.find(branch =>
              branch.name.startsWith(branchPrefix) &&
              branch.name !== `${branchPrefix}-security-replace-static-salt-with-unique-salt-per-`
            );

            if (!claudeBranch) {
              console.log('No Claude branch found for this issue');
              return;
            }

            const branchName = claudeBranch.name;
            console.log(`Found Claude branch: ${branchName}`);

            // Check if there are any commits on the branch different from main
            const comparison = await github.rest.repos.compareCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              base: 'main',
              head: branchName
            });

            // Only create PR if there are commits ahead of main
            if (comparison.data.ahead_by > 0) {
              const pr = await github.rest.pulls.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `Fix #${{ github.event.issue.number }}: ${{ github.event.issue.title }}`,
                head: branchName,
                base: 'main',
                body: `Closes #${{ github.event.issue.number }}

                ## Summary
                This PR implements the solution for the assigned issue.

                ## Changes Made
                - [List of changes will be added by Claude Code]

                ## Testing
                - All existing tests pass
                - New tests added where appropriate
                - Code quality checks pass

                ðŸ¤– This PR was created automatically by Claude Code.`
              });

              // Link the PR to the issue
              await github.rest.issues.createComment({
                issue_number: ${{ github.event.issue.number }},
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `âœ… **Implementation Complete!**

                I've finished working on this issue and created pull request #${pr.data.number} for review.

                The solution has been implemented and all quality checks have passed.`
              });
            }
